/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.C_Ingreso;
import Controlador.Conexion;
import Modelo.Ingreso;
import Modelo.Plantilla;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class Reporte_Ingreso extends javax.swing.JFrame {

    Connection c = Conexion.Conectar();
    DefaultTableModel modelo = new DefaultTableModel();
    ArrayList<Ingreso> lista_ingresos = new ArrayList<>();
    List<Ingreso> lista;
    int cont = 1;
    C_Ingreso i = new C_Ingreso();
    String titulo = "Reporte de Ingresos";

    public Reporte_Ingreso() {
        initComponents();
        PRODUCTOS();
        cabecera();
        Meses_Año();
    }

    private void PRODUCTOS() {
        String query = "SELECT nombre FROM Ingrediente";
        try {
            Statement st = c.createStatement();
            ResultSet rs = st.executeQuery(query);

            cbxproductos.addItem("Seleccionar");

            while (rs.next()) {
                String nombre = rs.getString("nombre");
                cbxproductos.addItem(nombre);
            }
        } catch (SQLException e) {
            System.out.println("Error al cargar los ingresos en el JComboBox: " + e.getMessage());
        }
    }

    public void Meses_Año() {
        String[] dias = new String[31];
        for (int i = 0; i < 31; i++) {
            dias[i] = String.valueOf(i);
        }
        cbxdias.setModel(new DefaultComboBoxModel<>(dias));
        cbxmeses.setModel(new DefaultComboBoxModel<>(new String[]{"Seleccionar", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"}));
        cbxaño.setModel(new DefaultComboBoxModel<>(new String[]{"Seleccionar", "2023", "2024", "2025"}));
    }

    private void cabecera() {
        modelo.addColumn("CODIGO");
        modelo.addColumn("PRODUCTO");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("CANTIDAD");
        modelo.addColumn("VENCIMIENTO");
        modelo.addColumn("INGRESO");

        tabla_busqueda.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbxproductos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        generar = new javax.swing.JButton();
        cbxdias = new javax.swing.JComboBox<>();
        cbxaño = new javax.swing.JComboBox<>();
        cbxmeses = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_busqueda = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtvencidos = new javax.swing.JTextField();
        txtrealizados = new javax.swing.JTextField();
        exportar = new javax.swing.JButton();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(848, 629));

        jPanel1.setBackground(new java.awt.Color(139, 120, 162));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("REPORTE DE INGRESOS");

        cbxproductos.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbxproductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxproductosActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Productos:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Fecha de ingreso:");

        generar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        generar.setText("Generar");
        generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarActionPerformed(evt);
            }
        });

        cbxdias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxdiasActionPerformed(evt);
            }
        });

        cbxaño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxañoActionPerformed(evt);
            }
        });

        cbxmeses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxmesesActionPerformed(evt);
            }
        });

        tabla_busqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla_busqueda);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ingresos vencidos:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cantidad de ingresos realizados:");

        exportar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        exportar.setText("Exportar");
        exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(generar)
                        .addGap(32, 32, 32)
                        .addComponent(exportar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtvencidos, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtrealizados, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(cbxdias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbxmeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxaño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(11, 11, 11)
                                .addComponent(cbxproductos, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(52, 52, 52))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxdias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxaño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxmeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxproductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtvencidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtrealizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exportar)
                            .addComponent(generar))
                        .addGap(28, 28, 28))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxproductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxproductosActionPerformed
        txtrealizados.setText("");
        txtvencidos.setText("");
    }//GEN-LAST:event_cbxproductosActionPerformed

    private void generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarActionPerformed

        modelo.setRowCount(0);
        String diaSeleccionado = (String) cbxdias.getSelectedItem();
        String mesSeleccionado = (String) cbxmeses.getSelectedItem();
        String añoSeleccionado = (String) cbxaño.getSelectedItem();
        String nombre_ingrediente = (String) cbxproductos.getSelectedItem();

        if (diaSeleccionado.equals("0") && mesSeleccionado.equals("Seleccionar") && añoSeleccionado.equals("Seleccionar") && nombre_ingrediente.equals("Seleccionar")) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una opción para hacer la busqueda");
        } else if (diaSeleccionado.equals("0") && mesSeleccionado.equals("Seleccionar") && añoSeleccionado.equals("Seleccionar") && (!nombre_ingrediente.equals("Seleccionar"))) {

            lista_ingresos = i.ObtenerIngresosIngrediente(nombre_ingrediente);

            for (Ingreso ingreso : lista_ingresos) {

                modelo.addRow(new Object[]{
                    ingreso.getCodigo(),
                    ingreso.getCodigoProducto(),
                    ingreso.getNombre_ingrediente(),
                    ingreso.getCantidad(),
                    ingreso.getVencimiento(),
                    ingreso.getIngreso()
                });
            }

            int vencidos = i.Conteo_FIngresos(lista_ingresos);
            int conteo = i.contar_ingresos(lista_ingresos);
            txtvencidos.setText("" + vencidos + "");
            txtrealizados.setText("" + conteo + "");

        } else if (nombre_ingrediente.equals("Seleccionar") && (!diaSeleccionado.equals("Selecciona") && !mesSeleccionado.equals("Seleccionar") && !añoSeleccionado.equals("Seleccionar"))) {

            int mesNumero = obtenerNumeroMes(mesSeleccionado);

            Calendar cal = Calendar.getInstance();
            cal.set(Calendar.YEAR, Integer.parseInt(añoSeleccionado));
            cal.set(Calendar.MONTH, mesNumero);
            cal.set(Calendar.DAY_OF_MONTH, Integer.parseInt(diaSeleccionado));

            Date fecha = new Date(cal.getTimeInMillis());

            lista_ingresos = i.ObtenerIngresosFecha(fecha);

            for (Ingreso ingreso : lista_ingresos) {

                modelo.addRow(new Object[]{
                    ingreso.getCodigo(),
                    ingreso.getCodigoProducto(),
                    ingreso.getNombre_ingrediente(),
                    ingreso.getCantidad(),
                    ingreso.getVencimiento(),
                    ingreso.getIngreso()
                });
            }
            int vencidos = i.Conteo_FIngresos(lista_ingresos);
            int conteo = i.contar_ingresos(lista_ingresos);
            txtvencidos.setText("" + vencidos + "");
            txtrealizados.setText("" + conteo + "");
        } else if (!nombre_ingrediente.equals("Seleccionar") && !diaSeleccionado.equals("Seleccionar") && !mesSeleccionado.equals("Seleccionar") && !añoSeleccionado.equals("Seleccionar")) {

            int mesNumero = obtenerNumeroMes(mesSeleccionado);

            Calendar cal = Calendar.getInstance();
            cal.set(Calendar.YEAR, Integer.parseInt(añoSeleccionado));
            cal.set(Calendar.MONTH, mesNumero);
            cal.set(Calendar.DAY_OF_MONTH, Integer.parseInt(diaSeleccionado));

            Date fecha = new Date(cal.getTimeInMillis());

            lista_ingresos = i.ObtenerIngresosFechaIngrediente(fecha, nombre_ingrediente);

            for (Ingreso ingreso : lista_ingresos) {

                modelo.addRow(new Object[]{
                    ingreso.getCodigo(),
                    ingreso.getCodigoProducto(),
                    ingreso.getNombre_ingrediente(),
                    ingreso.getCantidad(),
                    ingreso.getVencimiento(),
                    ingreso.getIngreso()
                });
            }

            int vencidos = i.Conteo_FIngresos(lista_ingresos);
            int conteo = i.contar_ingresos(lista_ingresos);
            txtvencidos.setText("" + vencidos + "");
            txtrealizados.setText("" + conteo + "");
        }
        lista=(List<Ingreso>)lista_ingresos;
    }//GEN-LAST:event_generarActionPerformed

    private void cbxañoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxañoActionPerformed
        txtrealizados.setText("");
        txtvencidos.setText("");
    }//GEN-LAST:event_cbxañoActionPerformed

    private void cbxmesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxmesesActionPerformed
        txtrealizados.setText("");
        txtvencidos.setText("");
    }//GEN-LAST:event_cbxmesesActionPerformed

    private void cbxdiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxdiasActionPerformed
        txtrealizados.setText("");
        txtvencidos.setText("");
    }//GEN-LAST:event_cbxdiasActionPerformed

    private void exportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarActionPerformed
        Plantilla plantilla = new Plantilla(titulo, getFecha());
        plantilla.crearPlantillaIngreso("listaDeIngresos" + cont, lista,Integer.parseInt(txtvencidos.getText()),Integer.parseInt(txtrealizados.getText()));
        cont++;
    }//GEN-LAST:event_exportarActionPerformed

    private int obtenerNumeroMes(String mes) {
        switch (mes) {
            case "Enero":
                return Calendar.JANUARY;
            case "Febrero":
                return Calendar.FEBRUARY;
            case "Marzo":
                return Calendar.MARCH;
            case "Abril":
                return Calendar.APRIL;
            case "Mayo":
                return Calendar.MAY;
            case "Junio":
                return Calendar.JUNE;
            case "Julio":
                return Calendar.JULY;
            case "Agosto":
                return Calendar.AUGUST;
            case "Septiembre":
                return Calendar.SEPTEMBER;
            case "Octubre":
                return Calendar.OCTOBER;
            case "Noviembre":
                return Calendar.NOVEMBER;
            case "Diciembre":
                return Calendar.DECEMBER;
            default:
                return -1; // Mes inválido
        }
    }

    public String getFecha() {
        GregorianCalendar gcal = new GregorianCalendar();
        int d = gcal.get(Calendar.DAY_OF_MONTH);
        int m = gcal.get(Calendar.MONTH);
        int y = gcal.get(Calendar.YEAR);
        int h = gcal.get(Calendar.HOUR_OF_DAY);
        int min = gcal.get(Calendar.MINUTE);
        m+=1;
        String mo;
        String di;
        String ho;
        String minu;
        if (m<10) {
            mo="0"+m;
        } else {
            mo= String.valueOf(m);
        }
        if (d<10) {
            di="0"+d;
        } else {
            di= String.valueOf(d);
        }
        if (h<10) {
            ho="0"+h;
        } else {
            ho= String.valueOf(h);
        }
        if (min<10) {
            minu="0"+min;
        } else {
            minu= String.valueOf(min);
        }
        return di + "/" + mo + "/" + y + " - " + ho + ":" + minu;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reporte_Ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reporte_Ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reporte_Ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reporte_Ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reporte_Ingreso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbxaño;
    private javax.swing.JComboBox<String> cbxdias;
    private javax.swing.JComboBox<String> cbxmeses;
    private javax.swing.JComboBox<String> cbxproductos;
    private javax.swing.JButton exportar;
    private javax.swing.JButton generar;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_busqueda;
    private javax.swing.JTextField txtrealizados;
    private javax.swing.JTextField txtvencidos;
    // End of variables declaration//GEN-END:variables
}
